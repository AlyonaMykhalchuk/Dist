{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth-guard.service.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.service.ts","webpack:///./src/app/users/user.ts","webpack:///./src/app/users/users.component.html","webpack:///./src/app/users/users.component.ts","webpack:///./src/app/users/users.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  admin works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent} from './login/login.component';\nimport {UserComponent} from './users/users.component';\n\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent},\n  { path: 'login', component: LoginComponent},\n  { path: 'users', component: UserComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'users';\n\n  constructor() {}\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UserComponent } from './users/users.component';\nimport { LoginComponent } from './login/login.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport {UsersService} from './users/users.service';\nimport {LoginService} from './login/login.service';\nimport {HttpClientModule} from '@angular/common/http';\nimport { AdminComponent } from './admin/admin.component';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {AuthService} from './auth.service';\nimport {AuthGuard} from './auth-guard.service';\n\n\nconst routes: Routes = [\n  { path: '', component: UserComponent },\n  { path: 'login', component: LoginComponent},\n  { path: 'users', component: UserComponent }\n];\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    LoginComponent,\n    AdminComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [UsersService, LoginService, AuthService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {AuthService} from './auth.service';\r\nimport {Injectable} from '@angular/core';\r\n\r\n@Injectable()\r\n\r\nexport class AuthGuard implements CanActivate {\r\n  constructor (private auth: AuthService) {}\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean > | Promise<boolean> | boolean {\r\n return this.auth.isAuth().then((isLoggedIn: boolean) => {\r\n   if (isLoggedIn) {\r\n     return true;\r\n   } else {\r\n  return false;\r\n   }\r\n });\r\n  }\r\n}\r\n","export class AuthService {\r\n\r\n  isLoggedIn = false;\r\nisAuth() {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      resolve(this.isLoggedIn);\r\n    }, 1000);\r\n  });\r\n}\r\n  logIn() {\r\n    this.isLoggedIn = true;\r\n  }\r\n  logOut () {\r\n    this.isLoggedIn = false;\r\n  }\r\n}\r\n","module.exports = \"input.ng-touched.ng-invalid {\\r\\n  border: solid red 2px;\\r\\n}\\r\\n\\r\\ninput.ng-touched.ng-valid {\\r\\n  border: solid green 2px;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLHVCQUF1QjtBQUN6QiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbnB1dC5uZy10b3VjaGVkLm5nLWludmFsaWQge1xyXG4gIGJvcmRlcjogc29saWQgcmVkIDJweDtcclxufVxyXG5cclxuaW5wdXQubmctdG91Y2hlZC5uZy12YWxpZCB7XHJcbiAgYm9yZGVyOiBzb2xpZCBncmVlbiAycHg7XHJcbn1cclxuXHJcbiJdfQ== */\"","module.exports = \"<nav>\\n  <div class=\\\"nav-wrapper\\\">\\n    <a  class=\\\"brand-logo right\\\">FrontEnd Academy InventorSoft</a>\\n  </div>\\n</nav>\\n<div class=\\\"col-xs-8\\\">\\n  <p class=\\\"text - xs - center\\\">Log in</p>\\n  <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"form-group\\\"\\n         [ngClass]=\\\"{'hasError':form.get('username').invalid && form.get('username').touched}\\\">\\n      <label for=\\\"username\\\">Email </label>\\n      <input type=\\\"text\\\" class=\\\"form-control underlined\\\"\\n             id =\\\"username\\\" placeholder=\\\"Enter your email\\\"\\n             formControlName= \\\"username\\\">\\n      <span class=\\\"form-help-text\\\" *ngIf=\\\"form.get('username').invalid && form.get('username').touched\\\">\\n      <span *ngIf=\\\"form.get('username')['errors']['required']\\\">  This field  can't be empty </span>\\n       <span *ngIf=\\\"form.get('username')['errors']['email']\\\">  Enter the correct email </span>\\n    </span>\\n    </div>\\n    <div class=\\\"form-group\\\"[ngClass]=\\\"{'hasError':form.get('password').invalid && form.get('password').touched}\\\">\\n      <label for=\\\"password\\\">Password </label>\\n      <input type=\\\"password\\\" class=\\\"form-control underlined\\\"\\n             id =\\\"password\\\" placeholder=\\\"Enter your password\\\" formControlName=\\\"password\\\">\\n      <span class=\\\"form-help-text\\\" *ngIf=\\\"form.get('password').invalid && form.get('password').touched\\\">\\n      <span *ngIf=\\\"form.get('password')['errors']['required']\\\">  This field  can't be empty </span>\\n       <span *ngIf=\\\"form.get('password')['errors']['minlength']\\\">\\n         Password must be longer than {{form.get('password')['errors']['minlength']['requiredLength']}} characters.\\n       Now it's only {{form.get('password')['errors']['minlength']['actualLength']}}</span>\\n    </span>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-block btn-primary\\\"[disabled]=\\\"form.invalid\\\" routerLink=\\\"/users\\\"(click)=\\\"changeAuthStatus('login')\\\">  Login</button>\\n    </div>\\n  </form>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {LoginService} from './login.service';\nimport {Credentials} from './credentials';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthService} from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  providers: [LoginService]\n})\n\n// export class LoginComponent implements OnInit{\n//   constructor (private loginServ: LoginService\n//   ) {}\n//   Login($event) {\n//     console.log(\"ea pltcm\");\n//   }\n//   submit() {\n//     this.loginServ.login(new Credentials('', ''));\n//   }\n// }\n\n\nexport class LoginComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(private auth: AuthService) {}\n   ngOnInit() {\n    this.form = new FormGroup({\n      'username': new FormControl(null, [Validators.required, Validators.email]),\n      'password': new FormControl(null, [Validators.required, Validators.minLength(6)])\n    });\n   }\n   onSubmit() {\n    console.log(this.form);\n   }\n  changeAuthStatus(status: string) {\n    if (status === 'username') {\n      this.auth.logIn();\n    } else {\n      this.auth.logOut();\n    }\n  }\n\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Credentials} from './credentials';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n\r\n  private url = 'https://reqres.in/api/login';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(credentials: Credentials) {\r\n    return console.log(this.http.post(this.url, credentials));\r\n  }\r\n}\r\n","export class User {\r\n\r\n    constructor(\r\n        public id: number,\r\n        public firstname: string,\r\n        public lastname: string,\r\n        public email: string,\r\n        public password: string) { }\r\n}\r\n","module.exports = \"<nav>\\n  <div class=\\\"nav-wrapper\\\">\\n  <a  class=\\\"brand-logo right\\\">FrontEnd Academy InventorSoft</a>\\n  <ul id=\\\"nav-mobile\\\" class=\\\"left hide-on-med-and-down\\\">\\n\\n  <li><a routerLink=\\\"/login\\\" class=\\\"btn btn-danger\\\" (click)=\\\"changeAuthStatus('logout')\\\">Log out</a></li>\\n\\n  </ul>\\n  </div>\\n  </nav>\\n<h1>List of users</h1>\\n<input type=\\\"button\\\" value=\\\"Add User\\\" class=\\\"btn btn-default\\\" (click)=\\\"addUser()\\\" />\\n<table class=\\\"table table-striped\\\">\\n  <thead>\\n  <tr>\\n    <td>id</td>\\n    <td>First name</td>\\n    <td>Last name</td>\\n    <td>Email</td>\\n    <td>Password</td>\\n    <td></td>\\n    <td></td>\\n  </tr>\\n  </thead>\\n  <tbody>\\n  <tr *ngFor=\\\"let user of users\\\">\\n    <ng-template [ngTemplateOutlet]=\\\"loadTemplate(user)\\\"\\n                 [ngTemplateOutletContext]=\\\"{ $implicit: user}\\\">\\n    </ng-template>\\n  </tr>\\n  </tbody>\\n</table>\\n<div>{{statusMessage}}</div>\\n\\n\\n<!--шаблон для чтения-->\\n<ng-template #readOnlyTemplate let-user>\\n  <td>{{user.id}}</td>\\n  <td>{{user.firstname}}</td>\\n  <td>{{user.lastname}}</td>\\n  <td>{{user.email}}</td>\\n  <td>{{user.password}}</td>\\n\\n  <td>\\n    <input type=\\\"button\\\" value=\\\"Delete\\\" (click)=\\\"deleteUser(user)\\\" class=\\\"btn btn-danger\\\" />\\n  </td>\\n</ng-template>\\n\\n<!--шаблон для редактирования-->\\n<ng-template #editTemplate>\\n  <td>\\n    <label>Id</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"editedUser.id\\\" readonly disabled class=\\\"form-control\\\" />\\n  </td>\\n  <td>\\n    <label>First name</label>\\n\\n    <input class=\\\"form-control\\\" firstname=\\\"firstname\\\" [(ngModel)]=\\\"editedUser.firstname\\\" #firstname=\\\"ngModel\\\" required />\\n    <div [hidden]=\\\"firstname.valid || firstname.untouched\\\" class=\\\"alert alert-danger\\\">\\n      Не указано имя\\n    </div>\\n  </td>\\n  <td>\\n    <label>Last name</label>\\n\\n    <input class=\\\"form-control\\\" lastname=\\\"lastname\\\" [(ngModel)]=\\\"editedUser.lastname\\\" #lastname=\\\"ngModel\\\" required />\\n    <div [hidden]=\\\"lastname.valid || lastname.untouched\\\" class=\\\"alert alert-danger\\\">\\n      Не указано имя\\n    </div>\\n  </td>\\n  <td>\\n    <label>Email</label>\\n    <input class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"editedUser.email\\\" #email=\\\"ngModel\\\"\\n           required pattern=\\\"[a-zA-Z_]+@[a-zA-Z_]+?\\\\.[a-zA-Z]{2,3}\\\" />\\n    <div [hidden]=\\\"email.valid || email.untouched\\\" class=\\\"alert alert-danger\\\">\\n      Некорректный email\\n    </div>\\n  </td>\\n  <td>\\n    <label>Password</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"editedUser.password\\\" class=\\\"form-control\\\" #password=\\\"ngModel\\\"  required />\\n\\n    <div [hidden]=\\\"password.valid || password.untouched\\\" class=\\\"alert alert-danger\\\">\\n      Некорректный пароль\\n    </div>\\n  </td>\\n  <td>\\n\\n    <button [disabled]=\\\"firstname.invalid || lastname.invalid || email.invalid || password.invalid\\\"\\n            class=\\\"btn btn-default\\\" (click)=\\\"saveUser()\\\">Save</button>\\n  </td>\\n  <td>\\n    <input type=\\\"button\\\" value=\\\"Cancel\\\" (click)=\\\"cancel()\\\" class=\\\"btn btn-warning\\\" />\\n  </td>\\n</ng-template>\\n\"","import {TemplateRef, ViewChild} from '@angular/core';\nimport {Component, OnInit} from '@angular/core';\nimport {User} from './user';\nimport {UsersService} from './users.service';\nimport {AuthService} from '../auth.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  providers: [UsersService, AuthService]\n})\nexport class UserComponent implements OnInit {\n  // типы шаблонов\n  @ViewChild('readOnlyTemplate') readOnlyTemplate: TemplateRef<any>;\n  @ViewChild('editTemplate') editTemplate: TemplateRef<any>;\n\n  editedUser: User;\n  users: Array<User>;\n  isNewRecord: boolean;\n  statusMessage: string;\n\n  constructor(\n    private serv: UsersService,\n     private auth: AuthService\n  ) {\n    this.users = new Array<User>();\n  }\n\n  ngOnInit() {\n    this.loadUsers();\n  }\n  changeAuthStatus(status: string) {\n    if (status === 'login') {\n      this.auth.logIn();\n    } else {\n      this.auth.logOut();\n    }\n  }\n  // загрузка пользователей\n  private loadUsers() {\n    this.serv.getUsers().subscribe((data: User[]) => {\n      this.users = data;\n    });\n  }\n  // добавление пользователя\n  addUser() {\n    this.editedUser = new User(0, '', '',  '' , '');\n    this.users.push(this.editedUser);\n    this.isNewRecord = true;\n  }\n\n  // редактирование пользователя\n  editUser(user: User) {\n    this.editedUser = new User(user.id, user.firstname, user.lastname, user.email, user.password);\n  }\n  // загружаем один из двух шаблонов\n  loadTemplate(user: User) {\n    if (this.editedUser && this.editedUser.id === user.id) {\n      return this.editTemplate;\n    } else {\n      return this.readOnlyTemplate;\n    }\n  }\n  // сохраняем пользователя\n  saveUser() {\n    if (this.isNewRecord) {\n      // добавляем пользователя\n      this.serv.createUser(this.editedUser).subscribe(data => {\n        this.statusMessage = 'Данные успешно добавлены',\n          this.loadUsers();\n      });\n      this.isNewRecord = false;\n      this.editedUser = null;\n    } else {\n      // изменяем пользователя\n      this.serv.updateUser(this.editedUser.id, this.editedUser).subscribe(data => {\n        this.statusMessage = 'Данные успешно обновлены',\n          this.loadUsers();\n      });\n      this.editedUser = null;\n    }\n  }\n  // отмена редактирования\n  cancel() {\n    // если отмена при добавлении, удаляем последнюю запись\n    if (this.isNewRecord) {\n      this.users.pop();\n      this.isNewRecord = false;\n    }\n    this.editedUser = null;\n  }\n  // удаление пользователя\n  deleteUser(user: User) {\n    this.serv.deleteUser(user.id).subscribe(data => {\n      this.statusMessage = 'Данные успешно удалены',\n        this.loadUsers();\n    });\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {User} from './user';\r\n\r\n@Injectable()\r\nexport class UsersService {\r\n\r\n    private url = 'http://5c8bcb35a0bb650014f03b86.mockapi.io/users';\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getUsers() {\r\n        return this.http.get(this.url);\r\n    }\r\n\r\n    createUser(user: User) {\r\n        return this.http.post(this.url, user);\r\n    }\r\n    updateUser(id: number, user: User) {\r\n        return this.http.put(this.url + '/' + id, user);\r\n    }\r\n    deleteUser(id: number) {\r\n        return this.http.delete(this.url + '/' + id);\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}